// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tlod.proto

#include "tlod.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace natashatlodpb {
class BGInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BGInfo>
      _instance;
} _BGInfo_default_instance_;
class FGInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FGInfo>
      _instance;
} _FGInfo_default_instance_;
}  // namespace natashatlodpb
namespace protobuf_tlod_2eproto {
void InitDefaultsBGInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_2eproto::InitDefaultsSymbolBlock3X5();
  {
    void* ptr = &::natashatlodpb::_BGInfo_default_instance_;
    new (ptr) ::natashatlodpb::BGInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::natashatlodpb::BGInfo::InitAsDefaultInstance();
}

void InitDefaultsBGInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBGInfoImpl);
}

void InitDefaultsFGInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_base_2eproto::InitDefaultsSymbolBlock3X5();
  {
    void* ptr = &::natashatlodpb::_FGInfo_default_instance_;
    new (ptr) ::natashatlodpb::FGInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::natashatlodpb::FGInfo::InitAsDefaultInstance();
}

void InitDefaultsFGInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFGInfoImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::BGInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::BGInfo, reelsindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::BGInfo, arr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::BGInfo, turnnums_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::BGInfo, downnums_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::BGInfo, curbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::BGInfo, turnwin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::FGInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::FGInfo, reelsindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::FGInfo, arr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::FGInfo, turnnums_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::FGInfo, downnums_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::FGInfo, curbet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::FGInfo, turnwin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::FGInfo, totalwin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::FGInfo, lastnums_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::natashatlodpb::FGInfo, curnums_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::natashatlodpb::BGInfo)},
  { 11, -1, sizeof(::natashatlodpb::FGInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::natashatlodpb::_BGInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::natashatlodpb::_FGInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tlod.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ntlod.proto\022\rnatashatlodpb\032\nbase.proto\""
      "\215\001\n\006BGInfo\022\022\n\nreelsIndex\030\001 \001(\005\022*\n\003arr\030\002 "
      "\001(\0132\035.natashabasepb.SymbolBlock3X5\022\020\n\010tu"
      "rnNums\030\003 \001(\005\022\020\n\010downNums\030\004 \001(\005\022\016\n\006curBet"
      "\030\005 \001(\005\022\017\n\007turnWin\030\006 \001(\005\"\302\001\n\006FGInfo\022\022\n\nre"
      "elsIndex\030\001 \001(\005\022*\n\003arr\030\002 \001(\0132\035.natashabas"
      "epb.SymbolBlock3X5\022\020\n\010turnNums\030\003 \001(\005\022\020\n\010"
      "downNums\030\004 \001(\005\022\016\n\006curBet\030\005 \001(\005\022\017\n\007turnWi"
      "n\030\006 \001(\005\022\020\n\010totalWin\030\007 \001(\005\022\020\n\010lastNums\030\010 "
      "\001(\005\022\017\n\007curNums\030\t \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 388);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tlod.proto", &protobuf_RegisterTypes);
  ::protobuf_base_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tlod_2eproto
namespace natashatlodpb {

// ===================================================================

void BGInfo::InitAsDefaultInstance() {
  ::natashatlodpb::_BGInfo_default_instance_._instance.get_mutable()->arr_ = const_cast< ::natashabasepb::SymbolBlock3X5*>(
      ::natashabasepb::SymbolBlock3X5::internal_default_instance());
}
void BGInfo::clear_arr() {
  if (GetArenaNoVirtual() == NULL && arr_ != NULL) {
    delete arr_;
  }
  arr_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BGInfo::kReelsIndexFieldNumber;
const int BGInfo::kArrFieldNumber;
const int BGInfo::kTurnNumsFieldNumber;
const int BGInfo::kDownNumsFieldNumber;
const int BGInfo::kCurBetFieldNumber;
const int BGInfo::kTurnWinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BGInfo::BGInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tlod_2eproto::InitDefaultsBGInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:natashatlodpb.BGInfo)
}
BGInfo::BGInfo(const BGInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_arr()) {
    arr_ = new ::natashabasepb::SymbolBlock3X5(*from.arr_);
  } else {
    arr_ = NULL;
  }
  ::memcpy(&reelsindex_, &from.reelsindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&turnwin_) -
    reinterpret_cast<char*>(&reelsindex_)) + sizeof(turnwin_));
  // @@protoc_insertion_point(copy_constructor:natashatlodpb.BGInfo)
}

void BGInfo::SharedCtor() {
  ::memset(&arr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&turnwin_) -
      reinterpret_cast<char*>(&arr_)) + sizeof(turnwin_));
  _cached_size_ = 0;
}

BGInfo::~BGInfo() {
  // @@protoc_insertion_point(destructor:natashatlodpb.BGInfo)
  SharedDtor();
}

void BGInfo::SharedDtor() {
  if (this != internal_default_instance()) delete arr_;
}

void BGInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BGInfo::descriptor() {
  ::protobuf_tlod_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tlod_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BGInfo& BGInfo::default_instance() {
  ::protobuf_tlod_2eproto::InitDefaultsBGInfo();
  return *internal_default_instance();
}


void BGInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:natashatlodpb.BGInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && arr_ != NULL) {
    delete arr_;
  }
  arr_ = NULL;
  ::memset(&reelsindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&turnwin_) -
      reinterpret_cast<char*>(&reelsindex_)) + sizeof(turnwin_));
  _internal_metadata_.Clear();
}

bool BGInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:natashatlodpb.BGInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 reelsIndex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reelsindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .natashabasepb.SymbolBlock3X5 arr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 turnNums = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &turnnums_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 downNums = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &downnums_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 curBet = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 turnWin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &turnwin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:natashatlodpb.BGInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:natashatlodpb.BGInfo)
  return false;
#undef DO_
}

void BGInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:natashatlodpb.BGInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reelsIndex = 1;
  if (this->reelsindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reelsindex(), output);
  }

  // .natashabasepb.SymbolBlock3X5 arr = 2;
  if (this->has_arr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *arr_, output);
  }

  // int32 turnNums = 3;
  if (this->turnnums() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->turnnums(), output);
  }

  // int32 downNums = 4;
  if (this->downnums() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->downnums(), output);
  }

  // int32 curBet = 5;
  if (this->curbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->curbet(), output);
  }

  // int32 turnWin = 6;
  if (this->turnwin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->turnwin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:natashatlodpb.BGInfo)
}

::google::protobuf::uint8* BGInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:natashatlodpb.BGInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reelsIndex = 1;
  if (this->reelsindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reelsindex(), target);
  }

  // .natashabasepb.SymbolBlock3X5 arr = 2;
  if (this->has_arr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *arr_, deterministic, target);
  }

  // int32 turnNums = 3;
  if (this->turnnums() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->turnnums(), target);
  }

  // int32 downNums = 4;
  if (this->downnums() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->downnums(), target);
  }

  // int32 curBet = 5;
  if (this->curbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->curbet(), target);
  }

  // int32 turnWin = 6;
  if (this->turnwin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->turnwin(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:natashatlodpb.BGInfo)
  return target;
}

size_t BGInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:natashatlodpb.BGInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .natashabasepb.SymbolBlock3X5 arr = 2;
  if (this->has_arr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *arr_);
  }

  // int32 reelsIndex = 1;
  if (this->reelsindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reelsindex());
  }

  // int32 turnNums = 3;
  if (this->turnnums() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->turnnums());
  }

  // int32 downNums = 4;
  if (this->downnums() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->downnums());
  }

  // int32 curBet = 5;
  if (this->curbet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->curbet());
  }

  // int32 turnWin = 6;
  if (this->turnwin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->turnwin());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BGInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:natashatlodpb.BGInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BGInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BGInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:natashatlodpb.BGInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:natashatlodpb.BGInfo)
    MergeFrom(*source);
  }
}

void BGInfo::MergeFrom(const BGInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:natashatlodpb.BGInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_arr()) {
    mutable_arr()->::natashabasepb::SymbolBlock3X5::MergeFrom(from.arr());
  }
  if (from.reelsindex() != 0) {
    set_reelsindex(from.reelsindex());
  }
  if (from.turnnums() != 0) {
    set_turnnums(from.turnnums());
  }
  if (from.downnums() != 0) {
    set_downnums(from.downnums());
  }
  if (from.curbet() != 0) {
    set_curbet(from.curbet());
  }
  if (from.turnwin() != 0) {
    set_turnwin(from.turnwin());
  }
}

void BGInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:natashatlodpb.BGInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BGInfo::CopyFrom(const BGInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:natashatlodpb.BGInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BGInfo::IsInitialized() const {
  return true;
}

void BGInfo::Swap(BGInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BGInfo::InternalSwap(BGInfo* other) {
  using std::swap;
  swap(arr_, other->arr_);
  swap(reelsindex_, other->reelsindex_);
  swap(turnnums_, other->turnnums_);
  swap(downnums_, other->downnums_);
  swap(curbet_, other->curbet_);
  swap(turnwin_, other->turnwin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BGInfo::GetMetadata() const {
  protobuf_tlod_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tlod_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FGInfo::InitAsDefaultInstance() {
  ::natashatlodpb::_FGInfo_default_instance_._instance.get_mutable()->arr_ = const_cast< ::natashabasepb::SymbolBlock3X5*>(
      ::natashabasepb::SymbolBlock3X5::internal_default_instance());
}
void FGInfo::clear_arr() {
  if (GetArenaNoVirtual() == NULL && arr_ != NULL) {
    delete arr_;
  }
  arr_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FGInfo::kReelsIndexFieldNumber;
const int FGInfo::kArrFieldNumber;
const int FGInfo::kTurnNumsFieldNumber;
const int FGInfo::kDownNumsFieldNumber;
const int FGInfo::kCurBetFieldNumber;
const int FGInfo::kTurnWinFieldNumber;
const int FGInfo::kTotalWinFieldNumber;
const int FGInfo::kLastNumsFieldNumber;
const int FGInfo::kCurNumsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FGInfo::FGInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tlod_2eproto::InitDefaultsFGInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:natashatlodpb.FGInfo)
}
FGInfo::FGInfo(const FGInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_arr()) {
    arr_ = new ::natashabasepb::SymbolBlock3X5(*from.arr_);
  } else {
    arr_ = NULL;
  }
  ::memcpy(&reelsindex_, &from.reelsindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&curnums_) -
    reinterpret_cast<char*>(&reelsindex_)) + sizeof(curnums_));
  // @@protoc_insertion_point(copy_constructor:natashatlodpb.FGInfo)
}

void FGInfo::SharedCtor() {
  ::memset(&arr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&curnums_) -
      reinterpret_cast<char*>(&arr_)) + sizeof(curnums_));
  _cached_size_ = 0;
}

FGInfo::~FGInfo() {
  // @@protoc_insertion_point(destructor:natashatlodpb.FGInfo)
  SharedDtor();
}

void FGInfo::SharedDtor() {
  if (this != internal_default_instance()) delete arr_;
}

void FGInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FGInfo::descriptor() {
  ::protobuf_tlod_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tlod_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FGInfo& FGInfo::default_instance() {
  ::protobuf_tlod_2eproto::InitDefaultsFGInfo();
  return *internal_default_instance();
}


void FGInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:natashatlodpb.FGInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && arr_ != NULL) {
    delete arr_;
  }
  arr_ = NULL;
  ::memset(&reelsindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&curnums_) -
      reinterpret_cast<char*>(&reelsindex_)) + sizeof(curnums_));
  _internal_metadata_.Clear();
}

bool FGInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:natashatlodpb.FGInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 reelsIndex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reelsindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .natashabasepb.SymbolBlock3X5 arr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 turnNums = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &turnnums_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 downNums = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &downnums_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 curBet = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curbet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 turnWin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &turnwin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 totalWin = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalwin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 lastNums = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lastnums_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 curNums = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curnums_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:natashatlodpb.FGInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:natashatlodpb.FGInfo)
  return false;
#undef DO_
}

void FGInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:natashatlodpb.FGInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reelsIndex = 1;
  if (this->reelsindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reelsindex(), output);
  }

  // .natashabasepb.SymbolBlock3X5 arr = 2;
  if (this->has_arr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *arr_, output);
  }

  // int32 turnNums = 3;
  if (this->turnnums() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->turnnums(), output);
  }

  // int32 downNums = 4;
  if (this->downnums() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->downnums(), output);
  }

  // int32 curBet = 5;
  if (this->curbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->curbet(), output);
  }

  // int32 turnWin = 6;
  if (this->turnwin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->turnwin(), output);
  }

  // int32 totalWin = 7;
  if (this->totalwin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->totalwin(), output);
  }

  // int32 lastNums = 8;
  if (this->lastnums() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->lastnums(), output);
  }

  // int32 curNums = 9;
  if (this->curnums() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->curnums(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:natashatlodpb.FGInfo)
}

::google::protobuf::uint8* FGInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:natashatlodpb.FGInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 reelsIndex = 1;
  if (this->reelsindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reelsindex(), target);
  }

  // .natashabasepb.SymbolBlock3X5 arr = 2;
  if (this->has_arr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *arr_, deterministic, target);
  }

  // int32 turnNums = 3;
  if (this->turnnums() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->turnnums(), target);
  }

  // int32 downNums = 4;
  if (this->downnums() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->downnums(), target);
  }

  // int32 curBet = 5;
  if (this->curbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->curbet(), target);
  }

  // int32 turnWin = 6;
  if (this->turnwin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->turnwin(), target);
  }

  // int32 totalWin = 7;
  if (this->totalwin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->totalwin(), target);
  }

  // int32 lastNums = 8;
  if (this->lastnums() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->lastnums(), target);
  }

  // int32 curNums = 9;
  if (this->curnums() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->curnums(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:natashatlodpb.FGInfo)
  return target;
}

size_t FGInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:natashatlodpb.FGInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .natashabasepb.SymbolBlock3X5 arr = 2;
  if (this->has_arr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *arr_);
  }

  // int32 reelsIndex = 1;
  if (this->reelsindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reelsindex());
  }

  // int32 turnNums = 3;
  if (this->turnnums() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->turnnums());
  }

  // int32 downNums = 4;
  if (this->downnums() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->downnums());
  }

  // int32 curBet = 5;
  if (this->curbet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->curbet());
  }

  // int32 turnWin = 6;
  if (this->turnwin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->turnwin());
  }

  // int32 totalWin = 7;
  if (this->totalwin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->totalwin());
  }

  // int32 lastNums = 8;
  if (this->lastnums() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lastnums());
  }

  // int32 curNums = 9;
  if (this->curnums() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->curnums());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FGInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:natashatlodpb.FGInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FGInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FGInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:natashatlodpb.FGInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:natashatlodpb.FGInfo)
    MergeFrom(*source);
  }
}

void FGInfo::MergeFrom(const FGInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:natashatlodpb.FGInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_arr()) {
    mutable_arr()->::natashabasepb::SymbolBlock3X5::MergeFrom(from.arr());
  }
  if (from.reelsindex() != 0) {
    set_reelsindex(from.reelsindex());
  }
  if (from.turnnums() != 0) {
    set_turnnums(from.turnnums());
  }
  if (from.downnums() != 0) {
    set_downnums(from.downnums());
  }
  if (from.curbet() != 0) {
    set_curbet(from.curbet());
  }
  if (from.turnwin() != 0) {
    set_turnwin(from.turnwin());
  }
  if (from.totalwin() != 0) {
    set_totalwin(from.totalwin());
  }
  if (from.lastnums() != 0) {
    set_lastnums(from.lastnums());
  }
  if (from.curnums() != 0) {
    set_curnums(from.curnums());
  }
}

void FGInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:natashatlodpb.FGInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FGInfo::CopyFrom(const FGInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:natashatlodpb.FGInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FGInfo::IsInitialized() const {
  return true;
}

void FGInfo::Swap(FGInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FGInfo::InternalSwap(FGInfo* other) {
  using std::swap;
  swap(arr_, other->arr_);
  swap(reelsindex_, other->reelsindex_);
  swap(turnnums_, other->turnnums_);
  swap(downnums_, other->downnums_);
  swap(curbet_, other->curbet_);
  swap(turnwin_, other->turnwin_);
  swap(totalwin_, other->totalwin_);
  swap(lastnums_, other->lastnums_);
  swap(curnums_, other->curnums_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FGInfo::GetMetadata() const {
  protobuf_tlod_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tlod_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace natashatlodpb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::natashatlodpb::BGInfo* Arena::Create< ::natashatlodpb::BGInfo >(Arena* arena) {
  return Arena::CreateInternal< ::natashatlodpb::BGInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::natashatlodpb::FGInfo* Arena::Create< ::natashatlodpb::FGInfo >(Arena* arena) {
  return Arena::CreateInternal< ::natashatlodpb::FGInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
