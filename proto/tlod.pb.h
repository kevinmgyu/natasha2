// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tlod.proto

#ifndef PROTOBUF_tlod_2eproto__INCLUDED
#define PROTOBUF_tlod_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "base.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_tlod_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsBGInfoImpl();
void InitDefaultsBGInfo();
void InitDefaultsFGInfoImpl();
void InitDefaultsFGInfo();
inline void InitDefaults() {
  InitDefaultsBGInfo();
  InitDefaultsFGInfo();
}
}  // namespace protobuf_tlod_2eproto
namespace natasha {
namespace tlod {
class BGInfo;
class BGInfoDefaultTypeInternal;
extern BGInfoDefaultTypeInternal _BGInfo_default_instance_;
class FGInfo;
class FGInfoDefaultTypeInternal;
extern FGInfoDefaultTypeInternal _FGInfo_default_instance_;
}  // namespace tlod
}  // namespace natasha
namespace google {
namespace protobuf {
template<> ::natasha::tlod::BGInfo* Arena::Create< ::natasha::tlod::BGInfo>(Arena*);
template<> ::natasha::tlod::FGInfo* Arena::Create< ::natasha::tlod::FGInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace natasha {
namespace tlod {

// ===================================================================

class BGInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:natasha.tlod.BGInfo) */ {
 public:
  BGInfo();
  virtual ~BGInfo();

  BGInfo(const BGInfo& from);

  inline BGInfo& operator=(const BGInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BGInfo(BGInfo&& from) noexcept
    : BGInfo() {
    *this = ::std::move(from);
  }

  inline BGInfo& operator=(BGInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BGInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BGInfo* internal_default_instance() {
    return reinterpret_cast<const BGInfo*>(
               &_BGInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(BGInfo* other);
  friend void swap(BGInfo& a, BGInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BGInfo* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<BGInfo>(NULL);
  }

  BGInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<BGInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BGInfo& from);
  void MergeFrom(const BGInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BGInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .natasha.base.SymbolBlock3X5 arr = 2;
  bool has_arr() const;
  void clear_arr();
  static const int kArrFieldNumber = 2;
  const ::natasha::base::SymbolBlock3X5& arr() const;
  ::natasha::base::SymbolBlock3X5* release_arr();
  ::natasha::base::SymbolBlock3X5* mutable_arr();
  void set_allocated_arr(::natasha::base::SymbolBlock3X5* arr);

  // int32 reelsIndex = 1;
  void clear_reelsindex();
  static const int kReelsIndexFieldNumber = 1;
  ::google::protobuf::int32 reelsindex() const;
  void set_reelsindex(::google::protobuf::int32 value);

  // int32 turnNums = 3;
  void clear_turnnums();
  static const int kTurnNumsFieldNumber = 3;
  ::google::protobuf::int32 turnnums() const;
  void set_turnnums(::google::protobuf::int32 value);

  // int32 downNums = 4;
  void clear_downnums();
  static const int kDownNumsFieldNumber = 4;
  ::google::protobuf::int32 downnums() const;
  void set_downnums(::google::protobuf::int32 value);

  // int32 curBet = 5;
  void clear_curbet();
  static const int kCurBetFieldNumber = 5;
  ::google::protobuf::int32 curbet() const;
  void set_curbet(::google::protobuf::int32 value);

  // int32 turnWin = 6;
  void clear_turnwin();
  static const int kTurnWinFieldNumber = 6;
  ::google::protobuf::int32 turnwin() const;
  void set_turnwin(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:natasha.tlod.BGInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::natasha::base::SymbolBlock3X5* arr_;
  ::google::protobuf::int32 reelsindex_;
  ::google::protobuf::int32 turnnums_;
  ::google::protobuf::int32 downnums_;
  ::google::protobuf::int32 curbet_;
  ::google::protobuf::int32 turnwin_;
  mutable int _cached_size_;
  friend struct ::protobuf_tlod_2eproto::TableStruct;
  friend void ::protobuf_tlod_2eproto::InitDefaultsBGInfoImpl();
};
// -------------------------------------------------------------------

class FGInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:natasha.tlod.FGInfo) */ {
 public:
  FGInfo();
  virtual ~FGInfo();

  FGInfo(const FGInfo& from);

  inline FGInfo& operator=(const FGInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FGInfo(FGInfo&& from) noexcept
    : FGInfo() {
    *this = ::std::move(from);
  }

  inline FGInfo& operator=(FGInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FGInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FGInfo* internal_default_instance() {
    return reinterpret_cast<const FGInfo*>(
               &_FGInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FGInfo* other);
  friend void swap(FGInfo& a, FGInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FGInfo* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<FGInfo>(NULL);
  }

  FGInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<FGInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FGInfo& from);
  void MergeFrom(const FGInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FGInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .natasha.base.SymbolBlock3X5 arr = 2;
  bool has_arr() const;
  void clear_arr();
  static const int kArrFieldNumber = 2;
  const ::natasha::base::SymbolBlock3X5& arr() const;
  ::natasha::base::SymbolBlock3X5* release_arr();
  ::natasha::base::SymbolBlock3X5* mutable_arr();
  void set_allocated_arr(::natasha::base::SymbolBlock3X5* arr);

  // int32 reelsIndex = 1;
  void clear_reelsindex();
  static const int kReelsIndexFieldNumber = 1;
  ::google::protobuf::int32 reelsindex() const;
  void set_reelsindex(::google::protobuf::int32 value);

  // int32 turnNums = 3;
  void clear_turnnums();
  static const int kTurnNumsFieldNumber = 3;
  ::google::protobuf::int32 turnnums() const;
  void set_turnnums(::google::protobuf::int32 value);

  // int32 downNums = 4;
  void clear_downnums();
  static const int kDownNumsFieldNumber = 4;
  ::google::protobuf::int32 downnums() const;
  void set_downnums(::google::protobuf::int32 value);

  // int32 curBet = 5;
  void clear_curbet();
  static const int kCurBetFieldNumber = 5;
  ::google::protobuf::int32 curbet() const;
  void set_curbet(::google::protobuf::int32 value);

  // int32 turnWin = 6;
  void clear_turnwin();
  static const int kTurnWinFieldNumber = 6;
  ::google::protobuf::int32 turnwin() const;
  void set_turnwin(::google::protobuf::int32 value);

  // int32 totalWin = 7;
  void clear_totalwin();
  static const int kTotalWinFieldNumber = 7;
  ::google::protobuf::int32 totalwin() const;
  void set_totalwin(::google::protobuf::int32 value);

  // int32 lastNums = 8;
  void clear_lastnums();
  static const int kLastNumsFieldNumber = 8;
  ::google::protobuf::int32 lastnums() const;
  void set_lastnums(::google::protobuf::int32 value);

  // int32 curNums = 9;
  void clear_curnums();
  static const int kCurNumsFieldNumber = 9;
  ::google::protobuf::int32 curnums() const;
  void set_curnums(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:natasha.tlod.FGInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::natasha::base::SymbolBlock3X5* arr_;
  ::google::protobuf::int32 reelsindex_;
  ::google::protobuf::int32 turnnums_;
  ::google::protobuf::int32 downnums_;
  ::google::protobuf::int32 curbet_;
  ::google::protobuf::int32 turnwin_;
  ::google::protobuf::int32 totalwin_;
  ::google::protobuf::int32 lastnums_;
  ::google::protobuf::int32 curnums_;
  mutable int _cached_size_;
  friend struct ::protobuf_tlod_2eproto::TableStruct;
  friend void ::protobuf_tlod_2eproto::InitDefaultsFGInfoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BGInfo

// int32 reelsIndex = 1;
inline void BGInfo::clear_reelsindex() {
  reelsindex_ = 0;
}
inline ::google::protobuf::int32 BGInfo::reelsindex() const {
  // @@protoc_insertion_point(field_get:natasha.tlod.BGInfo.reelsIndex)
  return reelsindex_;
}
inline void BGInfo::set_reelsindex(::google::protobuf::int32 value) {
  
  reelsindex_ = value;
  // @@protoc_insertion_point(field_set:natasha.tlod.BGInfo.reelsIndex)
}

// .natasha.base.SymbolBlock3X5 arr = 2;
inline bool BGInfo::has_arr() const {
  return this != internal_default_instance() && arr_ != NULL;
}
inline const ::natasha::base::SymbolBlock3X5& BGInfo::arr() const {
  const ::natasha::base::SymbolBlock3X5* p = arr_;
  // @@protoc_insertion_point(field_get:natasha.tlod.BGInfo.arr)
  return p != NULL ? *p : *reinterpret_cast<const ::natasha::base::SymbolBlock3X5*>(
      &::natasha::base::_SymbolBlock3X5_default_instance_);
}
inline ::natasha::base::SymbolBlock3X5* BGInfo::release_arr() {
  // @@protoc_insertion_point(field_release:natasha.tlod.BGInfo.arr)
  
  ::natasha::base::SymbolBlock3X5* temp = arr_;
  arr_ = NULL;
  return temp;
}
inline ::natasha::base::SymbolBlock3X5* BGInfo::mutable_arr() {
  
  if (arr_ == NULL) {
    arr_ = ::google::protobuf::Arena::Create< ::natasha::base::SymbolBlock3X5 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:natasha.tlod.BGInfo.arr)
  return arr_;
}
inline void BGInfo::set_allocated_arr(::natasha::base::SymbolBlock3X5* arr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(arr_);
  }
  if (arr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arr, submessage_arena);
    }
    
  } else {
    
  }
  arr_ = arr;
  // @@protoc_insertion_point(field_set_allocated:natasha.tlod.BGInfo.arr)
}

// int32 turnNums = 3;
inline void BGInfo::clear_turnnums() {
  turnnums_ = 0;
}
inline ::google::protobuf::int32 BGInfo::turnnums() const {
  // @@protoc_insertion_point(field_get:natasha.tlod.BGInfo.turnNums)
  return turnnums_;
}
inline void BGInfo::set_turnnums(::google::protobuf::int32 value) {
  
  turnnums_ = value;
  // @@protoc_insertion_point(field_set:natasha.tlod.BGInfo.turnNums)
}

// int32 downNums = 4;
inline void BGInfo::clear_downnums() {
  downnums_ = 0;
}
inline ::google::protobuf::int32 BGInfo::downnums() const {
  // @@protoc_insertion_point(field_get:natasha.tlod.BGInfo.downNums)
  return downnums_;
}
inline void BGInfo::set_downnums(::google::protobuf::int32 value) {
  
  downnums_ = value;
  // @@protoc_insertion_point(field_set:natasha.tlod.BGInfo.downNums)
}

// int32 curBet = 5;
inline void BGInfo::clear_curbet() {
  curbet_ = 0;
}
inline ::google::protobuf::int32 BGInfo::curbet() const {
  // @@protoc_insertion_point(field_get:natasha.tlod.BGInfo.curBet)
  return curbet_;
}
inline void BGInfo::set_curbet(::google::protobuf::int32 value) {
  
  curbet_ = value;
  // @@protoc_insertion_point(field_set:natasha.tlod.BGInfo.curBet)
}

// int32 turnWin = 6;
inline void BGInfo::clear_turnwin() {
  turnwin_ = 0;
}
inline ::google::protobuf::int32 BGInfo::turnwin() const {
  // @@protoc_insertion_point(field_get:natasha.tlod.BGInfo.turnWin)
  return turnwin_;
}
inline void BGInfo::set_turnwin(::google::protobuf::int32 value) {
  
  turnwin_ = value;
  // @@protoc_insertion_point(field_set:natasha.tlod.BGInfo.turnWin)
}

// -------------------------------------------------------------------

// FGInfo

// int32 reelsIndex = 1;
inline void FGInfo::clear_reelsindex() {
  reelsindex_ = 0;
}
inline ::google::protobuf::int32 FGInfo::reelsindex() const {
  // @@protoc_insertion_point(field_get:natasha.tlod.FGInfo.reelsIndex)
  return reelsindex_;
}
inline void FGInfo::set_reelsindex(::google::protobuf::int32 value) {
  
  reelsindex_ = value;
  // @@protoc_insertion_point(field_set:natasha.tlod.FGInfo.reelsIndex)
}

// .natasha.base.SymbolBlock3X5 arr = 2;
inline bool FGInfo::has_arr() const {
  return this != internal_default_instance() && arr_ != NULL;
}
inline const ::natasha::base::SymbolBlock3X5& FGInfo::arr() const {
  const ::natasha::base::SymbolBlock3X5* p = arr_;
  // @@protoc_insertion_point(field_get:natasha.tlod.FGInfo.arr)
  return p != NULL ? *p : *reinterpret_cast<const ::natasha::base::SymbolBlock3X5*>(
      &::natasha::base::_SymbolBlock3X5_default_instance_);
}
inline ::natasha::base::SymbolBlock3X5* FGInfo::release_arr() {
  // @@protoc_insertion_point(field_release:natasha.tlod.FGInfo.arr)
  
  ::natasha::base::SymbolBlock3X5* temp = arr_;
  arr_ = NULL;
  return temp;
}
inline ::natasha::base::SymbolBlock3X5* FGInfo::mutable_arr() {
  
  if (arr_ == NULL) {
    arr_ = ::google::protobuf::Arena::Create< ::natasha::base::SymbolBlock3X5 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:natasha.tlod.FGInfo.arr)
  return arr_;
}
inline void FGInfo::set_allocated_arr(::natasha::base::SymbolBlock3X5* arr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(arr_);
  }
  if (arr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arr, submessage_arena);
    }
    
  } else {
    
  }
  arr_ = arr;
  // @@protoc_insertion_point(field_set_allocated:natasha.tlod.FGInfo.arr)
}

// int32 turnNums = 3;
inline void FGInfo::clear_turnnums() {
  turnnums_ = 0;
}
inline ::google::protobuf::int32 FGInfo::turnnums() const {
  // @@protoc_insertion_point(field_get:natasha.tlod.FGInfo.turnNums)
  return turnnums_;
}
inline void FGInfo::set_turnnums(::google::protobuf::int32 value) {
  
  turnnums_ = value;
  // @@protoc_insertion_point(field_set:natasha.tlod.FGInfo.turnNums)
}

// int32 downNums = 4;
inline void FGInfo::clear_downnums() {
  downnums_ = 0;
}
inline ::google::protobuf::int32 FGInfo::downnums() const {
  // @@protoc_insertion_point(field_get:natasha.tlod.FGInfo.downNums)
  return downnums_;
}
inline void FGInfo::set_downnums(::google::protobuf::int32 value) {
  
  downnums_ = value;
  // @@protoc_insertion_point(field_set:natasha.tlod.FGInfo.downNums)
}

// int32 curBet = 5;
inline void FGInfo::clear_curbet() {
  curbet_ = 0;
}
inline ::google::protobuf::int32 FGInfo::curbet() const {
  // @@protoc_insertion_point(field_get:natasha.tlod.FGInfo.curBet)
  return curbet_;
}
inline void FGInfo::set_curbet(::google::protobuf::int32 value) {
  
  curbet_ = value;
  // @@protoc_insertion_point(field_set:natasha.tlod.FGInfo.curBet)
}

// int32 turnWin = 6;
inline void FGInfo::clear_turnwin() {
  turnwin_ = 0;
}
inline ::google::protobuf::int32 FGInfo::turnwin() const {
  // @@protoc_insertion_point(field_get:natasha.tlod.FGInfo.turnWin)
  return turnwin_;
}
inline void FGInfo::set_turnwin(::google::protobuf::int32 value) {
  
  turnwin_ = value;
  // @@protoc_insertion_point(field_set:natasha.tlod.FGInfo.turnWin)
}

// int32 totalWin = 7;
inline void FGInfo::clear_totalwin() {
  totalwin_ = 0;
}
inline ::google::protobuf::int32 FGInfo::totalwin() const {
  // @@protoc_insertion_point(field_get:natasha.tlod.FGInfo.totalWin)
  return totalwin_;
}
inline void FGInfo::set_totalwin(::google::protobuf::int32 value) {
  
  totalwin_ = value;
  // @@protoc_insertion_point(field_set:natasha.tlod.FGInfo.totalWin)
}

// int32 lastNums = 8;
inline void FGInfo::clear_lastnums() {
  lastnums_ = 0;
}
inline ::google::protobuf::int32 FGInfo::lastnums() const {
  // @@protoc_insertion_point(field_get:natasha.tlod.FGInfo.lastNums)
  return lastnums_;
}
inline void FGInfo::set_lastnums(::google::protobuf::int32 value) {
  
  lastnums_ = value;
  // @@protoc_insertion_point(field_set:natasha.tlod.FGInfo.lastNums)
}

// int32 curNums = 9;
inline void FGInfo::clear_curnums() {
  curnums_ = 0;
}
inline ::google::protobuf::int32 FGInfo::curnums() const {
  // @@protoc_insertion_point(field_get:natasha.tlod.FGInfo.curNums)
  return curnums_;
}
inline void FGInfo::set_curnums(::google::protobuf::int32 value) {
  
  curnums_ = value;
  // @@protoc_insertion_point(field_set:natasha.tlod.FGInfo.curNums)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tlod
}  // namespace natasha

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tlod_2eproto__INCLUDED
